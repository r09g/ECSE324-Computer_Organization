
//campus.mcgill.ca/EMF/ELE/ryang13/Desktop/ECSE 324/G64_Lab1/part1.axf:     file format elf32-littlearm


Disassembly of section .text:

00000000 <__cs3_interrupt_vector>:
 			
			.text
			.global _start

_start:
			LDR R4, =RESULT				// R4 points to the memory location of RESULT
   0:	e59f4054 	ldr	r4, [pc, #84]	; 5c <NUMBERS+0x1c>
			LDR R2, [R4, #4]			// R2 holds the number of entries in the list
   4:	e5942004 	ldr	r2, [r4, #4]
			ADD R3, R4, #8				// R3 points to address (R4 + 8 bytes), the first number in list
   8:	e2843008 	add	r3, r4, #8
			LDR R0, [R3]				// R0 holds the first number in the list
   c:	e5930000 	ldr	r0, [r3]

00000010 <LOOP>:

LOOP: 		SUBS R2, R2, #1				// number of entries is decremented
  10:	e2522001 	subs	r2, r2, #1
			BEQ DONE					// goto DONE if counter has reached 0
  14:	0a000005 	beq	30 <DONE>
			ADD R3, R3, #4				// R3 points to next number in list
  18:	e2833004 	add	r3, r3, #4
			LDR R1, [R3]				// load next number from memory address stored in R3
  1c:	e5931000 	ldr	r1, [r3]
			CMP R0, R1					// compare current and previous number
  20:	e1500001 	cmp	r0, r1
			BGE LOOP					// if old value still greater, go back to LOOP
  24:	aafffff9 	bge	10 <LOOP>
			MOV R0, R1					// if new value in R1 is greater, move value from R1 to R0
  28:	e1a00001 	mov	r0, r1
			B LOOP						// branch back to LOOP
  2c:	eafffff7 	b	10 <LOOP>

00000030 <DONE>:

DONE: 		STR R0, [R4]				// in the end, store contents in R0 into memory location stored in R4 (allocated for result).
  30:	e5840000 	str	r0, [r4]

00000034 <END>:

END: 		B END						// infinite loop!
  34:	eafffffe 	b	34 <END>

00000038 <RESULT>:
  38:	00000000 	.word	0x00000000

0000003c <N>:
  3c:	00000007 	.word	0x00000007

00000040 <NUMBERS>:
  40:	00000004 	.word	0x00000004
  44:	00000005 	.word	0x00000005
  48:	00000003 	.word	0x00000003
  4c:	00000006 	.word	0x00000006
  50:	00000001 	.word	0x00000001
  54:	00000008 	.word	0x00000008
  58:	00000002 	.word	0x00000002
  5c:	00000038 	.word	0x00000038
